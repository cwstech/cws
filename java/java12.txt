-----------------------------------------------------------EVEN NO---------------------------------------------------------------
import java.util.*;

class Customer {

    private String name, contact;
    public int age;

    public void getCustomers() {
        System.out.println("Welcome! Enter following details: ");
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter your name:= ");
        name = sc.nextLine();
        System.out.println("Enter your contactNumber:= ");
        contact = sc.nextLine();
        System.out.println("Enter your age:= ");
        age = sc.nextInt();
    }

    String rb() {
        return name;
    }

    String num() {
        return contact;
    }

}

class account extends Customer {

    int acc, bal;
    int bale;
    int dep;

    public void deposit() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter Your Acc");
        int dacc = sc.nextInt();
        System.out.println("Enter Deposit amt:= ");
        dep = sc.nextInt();
        if (dacc != acc) {
            System.out.println("Plase enter rigth AccNo");
        } else {
            int deposit = bale + dep;
            System.out.println("Your total amount is:= " + deposit);
        }

    }

    public void withdraw() {

        Scanner sc = new Scanner(System.in);
        System.out.println("Enter Your Acc");
        int wacc = sc.nextInt();
        System.out.println("Enter withdraw amt:= ");
        bal = sc.nextInt();
        if (wacc != acc) {
            System.out.println("Plase enter rigth AccNo");
        } else if (bale == 0) {
            System.out.println("Your amount is 0");
        } else {
            int sub = bale - bal;
            System.out.println("Your total amm is:= " + sub);
        }

    }

    public void transfer() {
        int baless = 0, baless1 = 0;
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter Your Acc");
        int send_acc = sc.nextInt();
        int rec_acc = sc.nextInt();
        System.out.println("Enter Transfer amt:= ");
        bal = sc.nextInt();

        if (send_acc != acc) {
            if (rec_acc != acc) {
                System.out.println("Dont mathch accNo");
            }
        } else {
            baless = bale - bal;
            baless1 = bale + bal;
        }
        System.out.println("sender account amount is:- " + baless);
        System.out.println("ricever account amount is:- " + baless1);
    }

    public void getAcc() {

        Scanner sc = new Scanner(System.in);
        System.out.println("Enter AccNo:= ");
        acc = sc.nextInt();
        System.out.println("EnterYour Bal:= ");
        bale = sc.nextInt();
    }

    public void dispaly() {
        System.out.println(rb() + "\t " + num() + " \t" + age + "\t" + acc + "\t" + bale);
        Scanner sc = new Scanner(System.in);

    }

    void process() {
        int a;
        do {
            Scanner sc = new Scanner(System.in);
            System.out.println("Do you want to withdraw enter[1] for withdraw procedure and enter[2] for deposit procedure and enter[3] for transfer procedure and enter [4] for exit the code");
            a = sc.nextInt();

            switch (a) {
                case 1:
                    withdraw();
                    break;
                case 2:
                    deposit();
                    break;
                case 3:
                    transfer();
                    break;
                case 4:
                    System.out.println("thank you");
                    break;
                default:
                    break;
            }
        } while (a != 4);
        {

        }
    }

}

public class MENU {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter number of menu:= ");
        int n = sc.nextInt();

        account menu[] = new account[n];

        for (int i = 0; i < n; i++) {
            menu[i] = new account();
            menu[i].getCustomers();
            menu[i].getAcc();
        }
        System.out.println("Name \t Contact\t Age \t acc \t bale");
        for (int i = 0; i < n; i++) {
            menu[i].dispaly();
        }

        for (int i = 0; i < n; i++) {
            menu[i].process();
        }

    }

}










---------------------------------------------------------------------ODD NO---------------------------------------------------





/*
PC No: 
Enrollment No: 
Faculty Name: Rupal mam
Student Name : 
Class : Sem 2
Div : B
Date: 06/05/22
Assignment: 5
Assignment Aim: Inheritance
 */

import java.util.*;

class Designation {

    String desig;
    private int base;
    private double oda_per, hra_per;

    Designation(String des) {
        desig = des;
        base = 0;
        oda_per = 0;
        hra_per = 0;
    }

    public void setDesig(String s) {
        switch (s) {
            case "Manager":
                base = 50000;
                oda_per = 5;
                hra_per = 5;
                break;
            case "Supervisor":
                base = 30000;
                oda_per = 10;
                hra_per = 10;
                break;
            case "Executive":
                base = 20000;
                oda_per = 15;
                hra_per = 15;
                break;
            default:
                break;
        }
    }

    String Desig() {
        return desig;
    }

    int basicSal() {
        return base;
    }

    double oda_per() {
        return oda_per;
    }

    double hra_per() {
        return hra_per;
    }

    public void putDesigDetails() {
        System.out.println("Designation: " + desig);
        System.out.println("Basic Salary: " + base);
        System.out.println("ODA: " + oda_per);
        System.out.println("HRA: " + hra_per);
    }

}

class Employee extends Designation {

    public Employee() {
        super(null);
    }
    public String name, des;
    public int base, exp;
    private double da, hra, it, gs, ns;

    public void getData(String n, String dep, int xp) {
        name = n;
        des = dep;
        exp = xp;
        switch (des) {
            case "Manager":
                base = 50000;
                break;
            case "Supervisor":
                base = 30000;
                break;
            case "Executive":
                base = 20000;
                break;
            default:
                break;
        }
    }

    public double calc_DA() {
        double oda = 0;
        da = 0;
        switch (des) {
            case "Manager":
                oda = 0.3 * base;
                break;
            case "Supervisor":
                oda = 0.2 * base;
                break;
            case "Executive":
                oda = 0.15 * base;
                break;
            default:
                break;
        }
        da = oda + (exp * 3);
        return da;
    }

    public double calc_HRA() {
        hra = 0;
        switch (des) {
            case "Manager":
                hra = 0.2 * base;
                break;
            case "Supervisor":
                hra = 0.1 * base;
                break;
            case "Executive":
                hra = 0.5 * base;
                break;
            default:
                break;
        }
        return hra;
    }

    public double calc_GS() {
        gs = base + da + hra;
        return gs;
    }

    public double calc_IT() {
        it = 0;
        if (gs > 70000) {
            it = 0.3 * gs;
        } else if (gs > 50000 && gs < 69999) {
            it = 0.2 * gs;
        } else if (gs > 30000 && gs < 49999) {
            it = 0.1 * gs;
        } else {
            it = 0;
        }
        return it;
    }

    public double calc_ns() {
        ns = gs - it;
        return ns;
    }

    public void putData() {
        System.out.print(name);
        System.out.print(" ");
        System.out.print(des);
        System.out.print(" ");
        System.out.print(base);
        System.out.print(" ");
        System.out.print(exp);
        System.out.print(" ");
        System.out.print(da);
        System.out.print(" ");
        System.out.print(hra);
        System.out.print(" ");
        System.out.print(it);
        System.out.print(" ");
        System.out.print(gs);
        System.out.print(" ");
        System.out.print(ns);
    }
}

class Executive extends Employee {

    private String assBy, status, delayReason;
    String task = "Not Assigned";
    private String assdate, actDate, expDate;
    Scanner sc = new Scanner(System.in);

    public void assignTask() {
        System.out.print("Task name: ");
        String tsk = sc.next();

        System.out.println("Assigned by: ");
        String temp1 = sc.next();

        System.out.println("Assigned Date: ");
        String date1 = sc.next();

        System.out.println("Expected Completeion Date: ");
        sc.nextLine();
        String date2 = sc.nextLine();
        task = tsk;
        assBy = temp1;
        assdate = date1;
        expDate = date2;

    }

    public void showUpdateTaskStatus() {
        System.out.println("");
        System.out.println("Task Name: " + task);
        System.out.println("Assigned By: " + assBy);
        System.out.println("Assign Date: " + assdate);
        System.out.println("ExpComp Date: " + expDate);
        System.out.println("");
        System.out.println("Do you want to update status? (Y/N)");
        String s1 = sc.next();
        s1 = s1.toLowerCase();
        char c = s1.charAt(0);
        if (c != 'y') {
            return;
        }
        System.out.println("");
        System.out.println("Select new status");
        System.out.println("1. Working");
        System.out.println("2. Suspended");
        System.out.println("3. Resumed");
        System.out.println("");
        int n = sc.nextInt();
        if (n == 1) {
            status = "Working";
        } else if (n == 2) {
            status = "Suspended";
        } else if (n == 3) {
            status = "Resumed";
        }
    }

    public void compTask() {
        task = "Closed";
        System.out.println("Congratulations the task is closed now.");
    }
}

class ManagerTask extends Employee {

    String status, assby, assto;
    String task = "Not Assigned";
    Scanner sc = new Scanner(System.in);

    public void assignTask() {
        System.out.print("Task name: ");
        String tsk = sc.next();
        System.out.println("Assigned by: ");
        String temp1 = sc.next();
        System.out.println("Assigned to: ");
        String temp2 = sc.next();
        task = tsk;
        assby = temp1;
        assto = temp2;
    }

    public void reqTaskStatus() {
        System.out.println("");
        System.out.println("Task Name: " + task);
        System.out.println("");
        System.out.println("Do you want to update status? (Y/N)");
        String s1 = sc.next();
        s1 = s1.toLowerCase();
        char c = s1.charAt(0);
        if (c != 'y') {
            return;
        }
        System.out.println("");
        System.out.println("Select new status");
        System.out.println("1. Working");
        System.out.println("2. Suspended");
        System.out.println("3. Resumed");
        System.out.println("4. Completed");
        System.out.println("");
        int n = sc.nextInt();
        if (n == 1) {
            status = "Working";
        } else if (n == 2) {
            status = "Suspended";
        } else if (n == 3) {
            status = "Resumed";
        } else if (n == 4) {
            status = "Completed";
        }
    }

    public void compTask() {
        task = "Closed";
        System.out.println("Congratulations the task is closed now.");
    }
}

public class april_29 {

    public static void mngOperation(ManagerTask m) {
        Scanner sc = new Scanner(System.in);
        System.out.println("");
        System.out.println("Choose the operation (ManagerTask)");
        System.out.println("");
        System.out.println("1. Assign Task");
        System.out.println("2. Show Task Status");
        System.out.println("3. Close Task");
        System.out.println("Else. End the program");
        System.out.println("________________________");
        System.out.println("");
        int n1 = sc.nextInt();
        if (n1 == 1) {
            m.assignTask();
        } else if (n1 == 2) {
            m.reqTaskStatus();
        } else if (n1 == 3) {
            m.compTask();
        } else {
            return;
        }
        mngOperation(m);
    }

    public static void operation(Executive[] s2) {
        Scanner sc = new Scanner(System.in);
        System.out.println("");
        System.out.println("Choose the operation");
        System.out.println("");
        System.out.println("1. Assign Task");
        System.out.println("2. Show Task Status");
        System.out.println("3. Close Task");
        System.out.println("________________________");
        System.out.println("");
        int n1 = sc.nextInt();
        if (n1 == 3) {
            return;
        }
        System.out.println("");
        System.out.println("________________________");
        System.out.println("");

        System.out.println("Choose Employee");
        for (int i = 5; i < s2.length; i++) {
            System.out.println(s2[i].name + "  " + s2[i].task);
        }
        System.out.println("________________________");
        System.out.println("");
        int n2 = sc.nextInt();
        System.out.println("");
        if (n1 == 1) {
            s2[n2 + 4].assignTask();
            System.out.println("Thank You");
            System.out.println(s2[n2 + 4].name + " has been assigned the task: " + s2[n2 + 4].task);
            System.out.println("");
        } else if (n1 == 2) {
            s2[n2 + 4].showUpdateTaskStatus();
        } else if (n1 == 3) {
            s2[n2 + 4].compTask();
        } else {
            return;
        }
        operation(s2);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Designation: ");
        String s12 = sc.next();
        Designation s1 = new Designation(s12);
        s1.setDesig(s12);
        System.out.println(s1.Desig());
        System.out.println(s1.basicSal());
        System.out.println(s1.oda_per());
        System.out.println(s1.hra_per());
        s1.putDesigDetails();
        Employee one = new Employee();
        String name = sc.next();
        String des = sc.next();
        int exp = sc.nextInt();
        one.putData();
        double da = one.calc_DA();
        double hra = one.calc_HRA();
        double gs = one.calc_GS();
        double it = one.calc_IT();
        double ns = one.calc_ns();

        // Moderate
        Executive[] s2 = new Executive[10];
        for (int i = 0; i < s2.length; i++) {
            s2[i] = new Executive();
            if (i < 2) {
                s2[i].getData("Mng", "Manager", i);
            } else if (i >= 2 && i < 5) {
                s2[i].getData("Sup", "Supervisor", i);
            }
        }
        s2[5].getData("exe1", "Executive", 5);
        s2[6].getData("exe2", "Executive", 6);
        s2[7].getData("exe3", "Executive", 7);
        s2[8].getData("exe4", "Executive", 8);
        s2[9].getData("exe5", "Executive", 9);
        operation(s2);

        //Advanced
        ManagerTask m1 = new ManagerTask();
        mngOperation(m1);
    }
}
